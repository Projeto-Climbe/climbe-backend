generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

<<<<<<< HEAD
model cargos {
  id_cargo   Int        @id @default(autoincrement())
  nome_cargo String     @unique @db.VarChar(255)
  usuarios   usuarios[]
}

model contratos {
  id_contrato Int        @id @default(autoincrement())
  id_proposta Int?
  descricao   String?    @db.Text
  valor       Decimal?   @db.Decimal(15, 2)
  data_inicio DateTime?  @db.Date
  data_fim    DateTime?  @db.Date
  status      String?    @db.VarChar(100)
  propostas   propostas? @relation(fields: [id_proposta], references: [id_proposta], onDelete: NoAction, onUpdate: NoAction, map: "contratos_ibfk_1")

  @@index([id_proposta], map: "id_proposta")
}

model documentos {
  id_documento   Int       @id @default(autoincrement())
  id_empresa     Int?
  tipo_documento String?   @db.VarChar(255)
  url_documento  String?   @db.VarChar(255)
  validade       DateTime? @db.Date
  empresas       empresas? @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "documentos_ibfk_1")

  @@index([id_empresa], map: "id_empresa")
}

model empresas {
  id_empresa             Int                 @id @default(autoincrement())
  nome_fantasia          String              @db.VarChar(255)
  razao_social           String              @db.VarChar(255)
  cnpj                   String              @unique(map: "cnpj") @db.VarChar(18)
  inscricao_estadual     String?             @db.VarChar(50)
  endereco               String?             @db.VarChar(255)
  cidade                 String?             @db.VarChar(255)
  estado                 String?             @db.VarChar(100)
  telefone               String?             @db.VarChar(20)
  email                  String?             @db.VarChar(255)
  representante_legal    String?             @db.VarChar(255)
  representante_cpf      String?             @db.VarChar(14)
  representante_rg       String?             @db.VarChar(20)
  representante_endereco String?             @db.VarChar(255)
  representante_cidade   String?             @db.VarChar(255)
  representante_estado   String?             @db.VarChar(100)
  documentos             documentos[]
  empresas_servicos      empresas_servicos[]
  propostas              propostas[]
  reunioes               reunioes[]
}

model empresas_servicos {
  id_empresa Int
  id_servico Int
  empresas   empresas @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "empresas_servicos_ibfk_1")

  @@id([id_empresa, id_servico])
}

model notificacoes {
  id_notificacao Int       @id @default(autoincrement())
  id_usuario     Int?
  mensagem       String?   @db.Text
  data_envio     DateTime? @db.DateTime(0)
  lida           Boolean?  @default(false)
  usuarios       usuarios? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "notificacoes_ibfk_1")

  @@index([id_usuario], map: "id_usuario")
}

model participantes_reuniao {
  id_reuniao Int
  id_usuario Int
  reunioes   reunioes @relation(fields: [id_reuniao], references: [id_reuniao], onDelete: NoAction, onUpdate: NoAction, map: "participantes_reuniao_ibfk_1")
  usuarios   usuarios @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "participantes_reuniao_ibfk_2")

  @@id([id_reuniao, id_usuario])
  @@index([id_usuario], map: "id_usuario")
}

model permissoes {
  id_permissao Int    @id @default(autoincrement())
  descricao    String @unique @db.VarChar(255)
}

model planilhas {
  id_planilha Int       @id @default(autoincrement())
  descricao   String?   @db.VarChar(255)
  url_arquivo String?   @db.VarChar(255)
  id_usuario  Int?
  usuarios    usuarios? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "planilhas_ibfk_1")

  @@index([id_usuario], map: "id_usuario")
}

model propostas {
  id_proposta  Int         @id @default(autoincrement())
  id_usuario   Int?
  id_empresa   Int?
  descricao    String?     @db.Text
  valor        Decimal?    @db.Decimal(15, 2)
  data_criacao DateTime?   @db.Date
  contratos    contratos[]
  usuarios     usuarios?   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "propostas_ibfk_1")
  empresas     empresas?   @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "propostas_ibfk_2")

  @@index([id_empresa], map: "id_empresa")
  @@index([id_usuario], map: "id_usuario")
}

model relatorios {
  id_relatorio Int       @id @default(autoincrement())
  descricao    String?   @db.VarChar(255)
  url_arquivo  String?   @db.VarChar(255)
  data_emissao DateTime? @db.Date
  id_usuario   Int?
  usuarios     usuarios? @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "relatorios_ibfk_1")

  @@index([id_usuario], map: "id_usuario")
}

model reunioes {
  id_reuniao            Int                     @id @default(autoincrement())
  id_usuario            Int?
  id_empresa            Int?
  data                  DateTime?               @db.Date
  hora                  DateTime?               @db.Time(0)
  local                 String?                 @db.VarChar(255)
  pauta                 String?                 @db.Text
  ata                   String?                 @db.Text
  participantes_reuniao participantes_reuniao[]
  usuarios              usuarios?               @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "reunioes_ibfk_1")
  empresas              empresas?               @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "reunioes_ibfk_2")

  @@index([id_empresa], map: "id_empresa")
  @@index([id_usuario], map: "id_usuario")
}

model servicos {
  id_servico   Int    @id @default(autoincrement())
  nome_servico String @db.VarChar(255)
}

model usuario_permissoes {
  id_usuario   Int
  id_permissao Int
  usuarios     usuarios @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_permissoes_ibfk_1")

  @@id([id_usuario, id_permissao])
}

model usuarios {
  id_usuario            Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(255)
  cpf                   String                  @unique(map: "cpf") @db.VarChar(14)
  email                 String                  @unique(map: "email") @db.VarChar(255)
  senha                 String                  @db.VarChar(255)
  status                String?                 @default("pending") @db.VarChar(100)
  telefone              String?                 @db.VarChar(20)
  endereco              String?                 @db.VarChar(255)
  cidade                String?                 @db.VarChar(255)
  estado                String?                 @db.VarChar(100)
  id_cargo              Int?
  notificacoes          notificacoes[]
  participantes_reuniao participantes_reuniao[]
  planilhas             planilhas[]
  propostas             propostas[]
  relatorios            relatorios[]
  reunioes              reunioes[]
  usuario_permissoes    usuario_permissoes[]
  cargos                cargos?                 @relation(fields: [id_cargo], references: [id_cargo], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_ibfk_1")

  @@index([id_cargo], map: "id_cargo")
}
=======
model User {
  id         Int      @id @default(autoincrement())
  fullName   String
  email      String   @unique
  cpf        String   @unique
  phone      String   
  password   String
  roleId    Int?      
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  
  role      Role?    @relation(fields: [roleId], references: [id])

  permissions UserPermission[]

}

model Role {
  id     Int     @id @default(autoincrement())
  name String    @unique

  users  User[]
}

model Permission{
  id     Int     @id @default(autoincrement())
  description   String  @unique

  users UserPermission[]
}

model UserPermission{
  id     Int     @id @default(autoincrement())
  userId Int
  permissionId Int

  user User @relation(fields: [userId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])

  @@unique([userId, permissionId])
  }


>>>>>>> cbf193cde6a8534c5803b9169f6788f8b96494fc
