tags:
  - name: Contratos
    description: API para gerenciamento de contratos.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Contrato:
      type: object
      required:
        - id_proposta
        - data_inicio
      properties:
        id_contrato:
          type: integer
          description: "O ID auto-gerado do contrato."
        id_proposta:
          type: integer
          description: "O ID da proposta relacionada."
        data_inicio:
          type: string
          format: date
          description: "Data de início do contrato."
        data_fim:
          type: string
          format: date
          description: "Data de término do contrato."
        status:
          type: string
          description: "Status atual do contrato."
      example:
        id_proposta: 1
        data_inicio: "2025-01-01"
        data_fim: "2026-01-01"
        status: "Ativo"

paths:
  /contratos:
    post:
      summary: Cria um novo contrato
      tags: [Contratos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contrato'
      responses:
        '201':
          description: "Contrato criado com sucesso."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contrato'
        '400':
          description: "Erro na requisição (ex: dados faltando)."
    get:
      summary: Retorna a lista de todos os contratos
      tags: [Contratos]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Lista de contratos."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contrato'
  /contratos/{id}:
    get:
      summary: Busca um contrato pelo ID
      tags: [Contratos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "O ID do contrato."
      responses:
        '200':
          description: "Dados do contrato."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contrato'
        '404':
          description: "Contrato não encontrado."
    put:
      summary: Atualiza um contrato pelo ID
      tags: [Contratos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "O ID do contrato."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contrato'
      responses:
        '200':
          description: "Contrato atualizado com sucesso."
        '404':
          description: "Contrato não encontrado."
    delete:
      summary: Deleta um contrato pelo ID
      tags: [Contratos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "O ID do contrato."
      responses:
        '204':
          description: "Contrato deletado com sucesso."
        '404':
          description: "Contrato não encontrado."
