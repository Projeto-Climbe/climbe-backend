openapi: 3.0.0
info:
  title: API - Documentos
  version: 1.0.0
  description: Documentação de Documentos 
servers:
  - url: http://localhost:3000/api
    description: Servidor local

tags:
  - name: Documentos
    description: Operações relacionadas ao gerenciamento de documentos 

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Document:
      type: object
      required:
        - id_empresa
        - type
        - url
        - analystId
      properties:
        id:
          type: integer
          example: 1
        id_empresa:
          type: integer
          example: 10
        type:
          type: string
          example: Contrato Social
        url:
          type: string
          example: https://meu-bucket.s3.amazonaws.com/documentos/contrato.pdf
        validated:
          type: boolean
          example: false
        analystId:
          type: integer
          example: 3
          description: ID do usuário responsável pelo documento. Deve ter cargo de Analista.

    DocumentCreate:
      type: object
      required:
        - id_empresa
        - type
        - url
        - analystId
      properties:
        id_empresa:
          type: integer
          example: 10
        type:
          type: string
          example: Certidão Negativa
        url:
          type: string
          example: https://meu-bucket.s3.amazonaws.com/documentos/cnd.pdf
        validated:
          type: boolean
          example: false
        analystId:
          type: integer
          example: 5
          description: ID do usuário responsável pelo documento. Deve ter cargo de Analista.

    DocumentUpdate:
      type: object
      properties:
        type:
          type: string
          example: Estatuto Atualizado
        url:
          type: string
          example: https://meu-bucket.s3.amazonaws.com/documentos/estatuto.pdf
        validated:
          type: boolean
          example: true
        analystId:
          type: integer
          example: 7
          description: ID do usuário responsável pelo documento. Deve ter cargo de Analista.

    DocumentList:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'

    ApiResponseError:
      type: object
      properties:
        error:
          type: string
          example: Mensagem de erro

paths:
  /document/upload/{id}:
    post:
      summary: Faz upload de um arquivo de documento
      tags: [Documentos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do documento ao qual o arquivo será associado
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Arquivo do documento a ser enviado
      responses:
        "200":
          description: Upload realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: https://meu-bucket.s3.amazonaws.com/documentos/arquivo.pdf
        "400":
          description: Erro no upload do arquivo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'

  /document:
    post:
      summary: Cria um novo documento
      tags: [Documentos]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
      responses:
        "201":
          description: Documento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        "400":
          description: Erro de validação — pode ocorrer se o usuário informado em `analystId` não for um Analista.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        "401":
          description: Token não fornecido ou inválido

    get:
      summary: Lista todos os documentos
      tags: [Documentos]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de documentos cadastrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentList'
        "401":
          description: Token não fornecido ou inválido
        "404":
          description: Nenhum documento encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'

  /document/{id}:
    get:
      summary: Busca documento pelo ID
      tags: [Documentos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do documento
      responses:
        "200":
          description: Documento encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/Document'
        "400":
          description: ID inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        "401":
          description: Token não fornecido ou inválido
        "404":
          description: Documento não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'

    patch:
      summary: Atualiza um documento
      tags: [Documentos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do documento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdate'
      responses:
        "200":
          description: Documento atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        "400":
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        "401":
          description: Token não fornecido ou inválido
        "404":
          description: Documento não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'

    delete:
      summary: Remove um documento
      tags: [Documentos]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do documento
      responses:
        "200":
          description: Documento removido com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Documento removido com sucesso.
        "400":
          description: ID inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        "401":
          description: Token não fornecido ou inválido
        "404":
          description: Documento não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
