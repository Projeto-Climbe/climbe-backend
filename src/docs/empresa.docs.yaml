tags:
  - name: Empresas
    description: Gerenciamento de empresas

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Empresa:
      type: object
      required:
        - nome_fantasia
        - razao_social
        - cnpj
      properties:
        id_empresa:
          type: integer
          description: O ID auto-gerado da empresa.
        nome_fantasia:
          type: string
          description: Nome fantasia da empresa.
        razao_social:
          type: string
          description: Razão social da empresa.
        cnpj:
          type: string
          description: CNPJ da empresa (único).
        email:
          type: string
          format: email
          description: E-mail de contato da empresa.
        telefone:
          type: string
          description: Telefone de contato da empresa.
      example:
        nome_fantasia: "Tech Solutions"
        razao_social: "Tech Solutions LTDA"
        cnpj: "12.345.678/0001-99"
        email: "contato@techsolutions.com"
        telefone: "(11) 98765-4321"

paths:
  /empresa:
    post:
      summary: Cria uma nova empresa
      tags: [Empresas]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Empresa"
      responses:
        "201":
          description: Empresa criada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empresa"
        "400":
          description: "Erro na requisição (ex: CNPJ duplicado)."
    get:
      summary: Retorna a lista de todas as empresas
      tags: [Empresas]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de empresas.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Empresa"
  /empresa/{id}:
    get:
      summary: Busca uma empresa pelo ID
      tags: [Empresas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: O ID da empresa
      responses:
        "200":
          description: Dados da empresa.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empresa"
        "404":
          description: Empresa não encontrada.
    put:
      summary: Atualiza uma empresa pelo ID
      tags: [Empresas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: O ID da empresa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Empresa"
      responses:
        "200":
          description: Empresa atualizada com sucesso.
        "404":
          description: Empresa não encontrada.
        "400":
          description: Erro na requisição.
    delete:
      summary: Deleta uma empresa pelo ID
      tags: [Empresas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: O ID da empresa
      responses:
        "204":
          description: Empresa deletada com sucesso.
        "404":
          description: Empresa não encontrada.

  /empresa/{id}/upload-document:
    post:
      summary: Faz upload de um documento obrigatório da empresa
      tags: [Empresas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "O ID da empresa"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documento:
                  type: string
                  format: binary
                  description: "Arquivo do documento a ser enviado"
                tipoDocumento:
                  type: string
                  description: "Tipo do documento (opcional)"
      responses:
        "201":
          description: "Documento enviado com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
                  bucket:
                    type: string
                  objectName:
                    type: string
        "400":
          description: "Erro no upload (ex: arquivo não enviado)."
        "500":
          description: "Erro interno ao fazer upload do documento."
tags:
  - name: Empresas
    description: "API para gerenciamento de empresas"
