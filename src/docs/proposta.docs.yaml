tags:
  - name: Proposta
    description: "Gerenciamento do ciclo de vida das propostas."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Contrato:
      type: object
      required:
        - id_proposta
        - data_inicio
      properties:
        id_contrato:
          type: integer
          description: "O ID auto-gerado do contrato."
        id_proposta:
          type: integer
          description: "ID da proposta que originou este contrato."
        data_inicio:
          type: string
          format: date
          description: "Data de início de vigência do contrato."
        data_fim:
          type: string
          format: date
          nullable: true
          description: "Data final de vigência do contrato."
        status:
          type: string
          description: "Status atual do contrato (e.g., ativo, encerrado, vencido)."
      example:
        id_proposta: 42
        data_inicio: "2025-10-01"
        data_fim: "2026-10-01"
        status: "ativo"

paths:
  /proposal:
    post:
      summary: Cria uma nova proposta
      tags: [Proposta]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - empresa_id
                - status
              properties:
                empresa_id:
                  type: integer
                  description: "ID da empresa relacionada à proposta."
                status:
                  type: string
                  description: "Status da proposta."
                data_criacao:
                  type: string
                  format: date
                  description: "Data de criação da proposta."
                usuario_id:
                  type: integer
                  description: "ID do usuário responsável."
      responses:
        "201":
          description: "Proposta criada com sucesso."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_proposta:
                    type: integer
                  empresa_id:
                    type: integer
                  status:
                    type: string
                  data_criacao:
                    type: string
                    format: date
                  usuario_id:
                    type: integer
        "400":
          description: "Erro na requisição (ex: dados inválidos ou faltando)."
    get:
      summary: Retorna a lista de todas as propostas
      tags: [Proposta]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Lista de propostas."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_proposta:
                      type: integer
                    empresa_id:
                      type: integer
                    status:
                      type: string
                    data_criacao:
                      type: string
                      format: date
                    usuario_id:
                      type: integer
  /proposal/{id}:
    get:
      summary: Busca uma proposta pelo ID
      tags: [Proposta]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "O ID da proposta"
      responses:
        "200":
          description: "Dados da proposta."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_proposta:
                    type: integer
                  empresa_id:
                    type: integer
                  status:
                    type: string
                  data_criacao:
                    type: string
                    format: date
                  usuario_id:
                    type: integer
        "404":
          description: "Proposta não encontrada."
    put:
      summary: Atualiza uma proposta pelo ID
      tags: [Proposta]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "O ID da proposta"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                empresa_id:
                  type: integer
                status:
                  type: string
                data_criacao:
                  type: string
                  format: date
                usuario_id:
                  type: integer
      responses:
        "200":
          description: "Proposta atualizada com sucesso."
        "404":
          description: "Proposta não encontrada."
    delete:
      summary: Deleta uma proposta pelo ID
      tags: [Proposta]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "O ID da proposta"
      responses:
        "204":
          description: "Proposta deletada com sucesso."
        "404":
          description: "Proposta não encontrada."
