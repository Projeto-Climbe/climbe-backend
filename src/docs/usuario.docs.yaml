tags:
  - name: Usuários
    description: Operações relacionadas a usuários e autenticação

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UsuarioPendente:
      type: object
      properties:
        id:
          type: integer
        fullName:
          type: string
        email:
          type: string
        status:
          type: string
          example: "pending"

    UsuarioUpdateStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: O novo status do usuário.
          enum: [approved, rejected]
          example: "approved"
    
    ApiResponseError:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro.

paths:
  /user/pending:
    get:
      summary: Lista todos os usuários com cadastro pendente
      tags: [Usuários]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Uma lista de usuários pendentes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioPendente'
        '401':
          description: Token não fornecido ou inválido.

  /user/{id}/status:
    patch:
      summary: Aprova ou rejeita o cadastro de um usuário
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: O ID do usuário a ser atualizado.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioUpdateStatus'
      responses:
        '200':
          description: Status do usuário atualizado com sucesso.
        '400':
          description: Status inválido fornecido.
        '401':
          description: Token não fornecido ou inválido.
        '404':
          description: Usuário não encontrado.

  /user/request-password-reset:
    post:
      summary: Solicita redefinição de senha (envia e-mail com token)
      tags: [Usuários]
      description: Envia um e-mail com um token de redefinição de senha para o usuário informado.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@email.com"
      responses:
        '200':
          description: E-mail de redefinição enviado com sucesso.
        '404':
          description: Usuário não encontrado.
        '500':
          description: Erro ao enviar e-mail de redefinição.

  /user/reset-password:
    post:
      summary: Redefine a senha usando o token recebido por e-mail
      tags: [Usuários]
      description: Permite redefinir a senha informando o token recebido por e-mail.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - newPassword
              properties:
                token:
                  type: string
                  description: Token recebido por e-mail
                newPassword:
                  type: string
                  format: password
                  description: Nova senha
      responses:
        '200':
          description: Senha redefinida com sucesso.
        '400':
          description: Token inválido ou expirado.
        '404':
          description: Usuário não encontrado.
        '500':
          description: Erro ao redefinir senha.

  /user/change-password:
    patch:
      summary: Troca a senha do usuário autenticado
      tags: [Usuários]
      security:
        - bearerAuth: []
      description: Permite ao usuário autenticado trocar sua própria senha.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  format: password
                  description: Senha atual
                newPassword:
                  type: string
                  format: password
                  description: Nova senha
      responses:
        '200':
          description: Senha alterada com sucesso.
        '400':
          description: Senha atual incorreta.
        '401':
          description: Token não fornecido ou inválido.
        '500':
          description: Erro ao alterar senha.
