tags:
  - name: Usuários
    description: Operações relacionadas a usuários e autenticação

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UsuarioSignUp:
      type: object
      required:
        - nome
        - email
        - senha
        - cpf
      properties:
        nome:
          type: string
          example: "João da Silva"
        email:
          type: string
          format: email
          example: "joao.silva@email.com"
        senha:
          type: string
          format: password
          example: "senhaForte123"
        cpf:
          type: string
          example: "123.456.789-00"

    UsuarioLogin:
      type: object
      required:
        - email
        - senha
      properties:
        email:
          type: string
          format: email
          example: "joao.silva@email.com"
        senha:
          type: string
          format: senha
          example: "senhaForte123"

    UsuarioLoginResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          type: object
          properties:
            id:
              type: integer
            fullName:
              type: string
            email:
              type: string
        token:
          type: string
          description: Token JWT para autenticação.

    UsuarioPendente:
      type: object
      properties:
        id:
          type: integer
        fullName:
          type: string
        email:
          type: string
        status:
          type: string
          example: "pending"

    UsuarioUpdateStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: O novo status do usuário.
          enum: [approved, rejected]
          example: "approved"
    
    ApiResponseError:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro.

    GoogleAuthUrlResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL de autenticacao do Google para redirecionamento.

    OAuthCallbackProfile:
      type: object
      properties:
        id:
          type: integer
        fullName:
          type: string
        email:
          type: string
          format: email
        profilePicture:
          type: string
          format: uri
          nullable: true
        state:
          type: string
          nullable: true

    OAuthCallbackSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        pending:
          type: boolean
          example: false
        user:
          type: string
          description: Token JWT gerado pela aplicacao.
        profile:
          $ref: '#/components/schemas/OAuthCallbackProfile'

    OAuthCallbackPendingResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        pending:
          type: boolean
          example: true
        message:
          type: string

paths:
  /user/signup:
    post:
      summary: Cadastra um novo usuário
      tags: [Usuários]
      description: Cria um novo usuário com status inicial pendente de aprovação.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioSignUp'
      responses:
        '201':
          description: Usuário cadastrado com sucesso.
        '400':
          description: 'Erro de validação (ex: e-mail já em uso).' # <-- CORREÇÃO APLICADA AQUI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'

  /user/login:
    post:
      summary: Autentica um usuário e retorna um token
      tags: [Usuários]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioLogin'
      responses:
        '200':
          description: Login bem-sucedido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioLoginResponse'
        '401':
          description: Não autorizado (e-mail ou senha inválidos).
        '403':
          description: Proibido (cadastro ainda não aprovado).

  /user/auth/google:
    get:
      summary: Inicia o fluxo de autenticacao com o Google OAuth 2.0
      tags: [Usuários]
      parameters:
        - in: query
          name: state
          required: false
          schema:
            type: string
          description: Valor opcional para manter estado entre as requisicoes.
      responses:
        '302':
          description: Redirecionamento para a tela de consentimento do Google.
        '200':
          description: URL de autenticacao retornada para clientes que tratam o fluxo manualmente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAuthUrlResponse'
        '500':
          description: Erro na geracao da URL de autenticacao.

  /user/auth/google/callback:
    get:
      summary: Callback do Google OAuth 2.0
      tags: [Usuários]
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
          description: Codigo de autorizacao retornado pelo Google.
        - in: query
          name: state
          required: false
          schema:
            type: string
          description: Mesmo valor enviado na etapa inicial, se utilizado.
      responses:
        '200':
          description: Autenticacao concluida com sucesso e token emitido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthCallbackSuccessResponse'
        '202':
          description: Usuario criado via Google aguardando aprovacao do administrador.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthCallbackPendingResponse'
        '400':
          description: Erro ao validar o retorno do Google ou dados incompletos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseError'
        '403':
          description: Usuario existente ainda nao aprovado para acesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthCallbackPendingResponse'
        '500':
          description: Falha inesperada ao processar o retorno do Google.

  /user/pending:
    get:
      summary: Lista todos os usuários com cadastro pendente
      tags: [Usuários]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Uma lista de usuários pendentes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioPendente'
        '401':
          description: Token não fornecido ou inválido.

  /users/{id}/status:
    patch:
      summary: Aprova ou rejeita o cadastro de um usuário
      tags: [Usuários]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: O ID do usuário a ser atualizado.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioUpdateStatus'
      responses:
        '200':
          description: Status do usuário atualizado com sucesso.
        '400':
          description: Status inválido fornecido.
        '401':
          description: Token não fornecido ou inválido.
        '404':
          description: Usuário não encontrado.
